#!/bin/bash

#----------------------------------------------------------------------------------
# Project Name      - insit (Based on the older, Installit)
# Started On        - Wed 13 Dec 01:13:55 GMT 2017
# Last Change       - Sat 13 Jan 11:50:43 GMT 2018
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#----------------------------------------------------------------------------------
# This installer replaces the old installit. The aim of this installer is to do
# away with the need to have several installers, but instead combining them all
# into one easy-to-use installer, while making it more practical to update.
#----------------------------------------------------------------------------------

XERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; exit 1; }
ERR(){ printf "[L%0.4d] ERROR: %s\n" "$1" "$2" 1>&2; }

declare -i DEPCOUNT=0
for DEP in /usr/bin/wget /bin/{rm,chmod,chown,mkdir}; {
	[ -x "$DEP" ] || {
		ERR "$LINENO" "Dependency '$DEP' not met."
		DEPCOUNT+=1
	}
}

[ $DEPCOUNT -eq 0 ] || exit 1

USAGE(){
	while read -r; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            INSIT (13th January 2018)
		            Written by terminalforlife (terminalforlife@yahoo.com)
		
		            Installer for many shell programs from terminalforlife.

		SYNTAX:     insit [OPTS] WHAT1 WHAT2 WHAT3 . . .
		
		OPTS:       --help|-h|-?            - Displays this help information.
		            --debug                 - Enables the built-in bash debugging.
		            --quiet|-q              - Runs in quiet mode. Errors still output.
		            --update|-U             - Replace and update existing files.
		            --uninstall|-u          - Uninstall files installed here.
		            --available|-A          - Output all available programs.
		            --branch|-B NAME        - Where NAME is the branch to use.
		            --self-update|-S        - Update insit to the latest stable version.
		            --custom|-C             - Execute your own FILE function line.

		NOTE:       Where WHAT is the program(s) to install.

		            The argument positions for the FILE function:
		
		              1: Name of the repository, per the URL.
		              2: Name of the file, per the URL, to download.
		              3: Desired name of the file to be Downloaded.
		              4: The permissions (mode), such as 755 or 644.
		              5: The file's owner and group, such as 0 or \$USER.

		WARNING:    Uninstalling with this program is permanent!
		
		SITE:       https://github.com/terminalforlife
	EOF
}

URL="https://raw.githubusercontent.com/terminalforlife"
BRANCH="master"

while [ "$1" ]; do
	case "$1" in
		--help|-h|-\?)
			USAGE; exit 0 ;;
		--debug)
			DEBUGME="true" ;;
		--quiet|-q)
			BEQUIET="true" ;;
		--update|-U)
			UPDATE="true" ;;
		--uninstall|-u)
			UNINSTALL="true" ;;
		--available|-A)
			AVAIL_SHOW="true" ;;
		--branch|-B)
			shift
			BRANCH="$1" ;;
		--self-update|-S)
			SELF="true" ;;
		--custom|-C)
			CUSTOM="true" ;;
		-*)
			XERR "$LINENO" "Incorrect argument(s) specified." ;;
		*)
			break ;;
	esac

	shift
done

if ! [ "$AVAIL_SHOW" == "true" ]; then
	[ $UID -eq 0 ] || XERR "$LINENO" "Root access is required."
fi

[ "$BEQUIET" == "true" ] && exec 1> /dev/null
[ "$DEBUGME" == "true" ] && set -xeu

FILE(){
	# FILE project_name "source_file.sh" "/usr/bin/target_file" 755
	if [ "$UNINSTALL" == "true" ]; then
		/bin/rm "$3" && printf "File '%s' removed.\n" "$3"
	else
		#TODO - The below line needs to test for whether update or self are
		#       NOT true, as well as if the file $3 already exists. This is
		#       to ensure proper self update and regular program updates.
		if [ -f "$3" -a ! "$UPDATE" == "true" ]; then
			ERR "$LINENO" "File already exists: $3"
			return 1
		else
			#TODO - This is sloppy - IMPROVE!
			if [ -f "$3" ]; then
				if /usr/bin/wget -q "$URL/$1/$BRANCH/$2" -O "$3" &> /dev/null; then
					printf "File '%s' downloaded and updated.\n" "$3"
				else
					ERR "$LINENO" "Unable to download and/or update '$3' file."
				fi

				if /bin/chown $5:$5 "$3" &> /dev/null; then
					printf "File '%s' ownership re-set.\n" "$3"
				else
					ERR "$LINENO" "Unable to re-set the ownership of '$3' file."
				fi

				if /bin/chmod "$4" "$3" &> /dev/null; then
					printf "File '%s' mode re-set.\n" "$3"
				else
					ERR "$LINENO" "Unable to re-set the mode of '$3' file."
				fi
			else
				if /usr/bin/wget -q "$URL/$1/$BRANCH/$2" -O "$3" &> /dev/null; then
					printf "File '%s' downloaded.\n" "$3"
				else
					ERR "$LINENO" "Unable to download '$3' file."
				fi

				if /bin/chown $5:$5 "$3" &> /dev/null; then
					printf "File '%s' ownership set.\n" "$3"
				else
					ERR "$LINENO" "Unable to set the ownership of '$3' file."
				fi

				if /bin/chmod "$4" "$3" &> /dev/null; then
					printf "File '%s' mode set.\n" "$3"
				else
					ERR "$LINENO" "Unable to set the mode of '$3' file."
				fi
			fi
		fi
	fi
}

SELF_UPDATE(){
	declare -i FAIL=0

	if /usr/bin/wget -q "$URL/installit/master/insit" -O /usr/bin/insit &> /dev/null; then
		printf "File '%s' downloaded and updated.\n" /usr/bin/insit
	else
		ERR "$LINENO" "Unable to download and/or update '/usr/bin/insit' file."
		FAIL+=1
	fi
	
	if /bin/chown 0:0 /usr/bin/insit &> /dev/null; then
		printf "File '%s' ownership re-set.\n" /usr/bin/insit
	else
		ERR "$LINENO" "Unable to set the ownership of '/usr/bin/insit' file."
		FAIL+=1
	fi
	
	if /bin/chmod 755 /usr/bin/insit &> /dev/null; then
		printf "File '%s' mode re-set.\n" /usr/bin/insit
	else
		ERR "$LINENO" "Unable to set the mode of '/usr/bin/insit' file."
		FAIL+=1
	fi

	if [ $FAIL -gt 0 ]; then
		return 1
	fi
}

AVAIL=(
	"simplify-ubuntu - Small project to lighten standard Ubuntu 16.04.3 LTS installations."
	"forex - Easily convert various currency rates straight from the terminal."
	"autoscrot - Tool to take full screenshots at user-specified intervals using scrot."
	"apt-undo-install - Undo the last package(s) install executed with apt-get."
	"binwatch - Output list of executables found in your PATH"
	"bl - Much simpler, quicker version of blkid."
	"nxbt - A fork and improvement of the XBT program written by Joe Collins."
	"catmedia - Concatenate media files originally separated in parts."
	"cpufreq - Lightweight Bourne Shell utility to output your CPU frequencies."
	"dwwdl - Download all of the available DistroWatch Weekly podcasts."
	"notify-upgrade - Simple upgrade notification utility for Debian- and Ubuntu-based systems."
	"roks - This small program will clear out your system of old kernel versions."
	"bdl - Easily and quickly download a batch of files using wget."
	"bashconfig - My own bash settings and shell plugins for use by anybody."
	"i3config - My own i3-wm settings and shell plugins for use by anybody."
	"kernelchk - Small tool to check for a change in kernel version. Ideal for scripts."
	"get-uuid - Grab and copy your file system's UUID with this simple, easy-to-use GUI."
	"wcdl - Crawl WallpapersCraft for desktop backgrounds."
	"getline - Pure Bourne Again Shell way to handle a plain text file."
	"mansaver - Save man pages for each applicable command in PATH."
	"lspkg - Quickly and portable-y show, describe, and search installed packages."
	"lsbins - Simple shell program to list and describe the PATH executables."
	"github-ssh-setup - Simple shell program to create an SSH key pair for GitHub."
	"homewatch - Output files in HOME which have been modified today."
	"getip - View your internal and/or external IP address."
	"ripmydvd - Shell program using ffmpeg and mplayer to rip your DVD."
	"simwea - Simple program to display some weather statistics."
	"medlog - Need help taking and logging when you've had your medication?"
	"mif - Shell program to filter films by year and whether seen or not."
	"seewttr - Super-simple wrapper-like script to get your weather."
	"backmeup - Small tool I use to quickly and easily back up my HOME."
	"clean-locales - Remove some unnecessary non-English localizations."
	"mkpass - Pure Bourne Again Shell approach to complex password generation."
	"mplay - Simple script to allow me to quickly load mocp how I like."
	"pagewatch - Watch a webpage for signs of change by checkings its md5sum."
	"redshifter - Effective and simple tool to manually adjust the gamma via Redshift."
	"tozero - Simple program to display a countdown for a target date."
	"nosp - A workaround for the issue in XFCE wherein Smart Placement refuses to go away."
	"dlspwalls - Download a collection of steampunk wallpapers."
	"dlfcmags - Download issues of the Full Circle magazine PDFs."
	"dlfallwalls - Download a collection of Autumn/Fall wallpapers."
	"dl-tuxradar-podcasts - Small shell program to download the TuxRadar podcasts."
)

if [ "$SELF" == "true" ]; then
	if SELF_UPDATE; then
		printf "Successful insit update.\n"
		exit 0
	else
		XERR "$LINENO" "Failure to properly update insit."
	fi
fi

if [ "$CUSTOM" == "true" ]; then
	FILE $@
	exit 0
fi

if ! [ "$AVAIL_SHOW" == "true" ]; then
	while [ "$1" ]; do
		case "$1" in
			simplify-ubuntu)
				FILE simplify-ubuntu simplify-ubuntu /usr/bin/simplify-ubuntu 755 0
				FILE miscellaneous clean-locales /usr/bin/clean-locales 755 0 ;;
			forex)
				FILE miscellaneous forex /usr/bin/forex 755 0 ;;
			autoscrot)
				FILE autoscrot autoscrot /usr/bin/autoscrot 755 0 ;;
			apt-undo-install)
				FILE apt-undo-install apt-undo-install /usr/bin/apt-undo-install 755 0 ;;
			binwatch)
				FILE binwatch binwatch /usr/bin/binwatch 755 0 ;;
			bl)
				FILE bl bl /usr/bin/bl 755 0 ;;
			nxbt)
				FILE nxbt nxbt /usr/bin/nxbt 755 0 ;;
			catmedia)
				FILE catmedia catmedia /usr/bin/catmedia 755 0 ;;
			cpufreq)
				FILE cpufreq cpufreq /usr/bin/cpufreq 755 0 ;;
			dwwdl)
				FILE dwwdl dwwdl /usr/bin/dwwdl 755 0 ;;
			notify-upgrade)
				FILE notify-upgrade notify-upgrade /usr/bin/notify-upgrade 755 0 ;;
			roks)
				FILE roks roks /usr/bin/roks 755 0 ;;
			bdl)
				FILE bdl bdl /usr/bin/bdl 755 0 ;;
			bashconfig)
				FILE bashconfig .profile $HOME/.profile 644 "$SUDO_UID"
				FILE bashconfig .bash_aliases $HOME/.bash_aliases 644 "$SUDO_UID"
				FILE bashconfig .bashrc $HOME/.bashrc 644 "$SUDO_UID"
				[ -d "$HOME/ShellPlugins" ] || /bin/mkdir --mode=755 "$HOME/ShellPlugins"
				/bin/chown "$SUDO_UID":"$SUDO_UID" "$HOME/ShellPlugins"
				FILE bashconfig ShellPlugins/Bell_Alarm $HOME/ShellPlugins/Bell_Alarm 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Cleaner_RK_Scan $HOME/ShellPlugins/Cleaner_RK_Scan 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Clear_CD_LS $HOME/ShellPlugins/Clear_CD_LS 644 $SUDO_UID
				FILE bashconfig ShellPlugins/CPU_Intensive_Procs $HOME/ShellPlugins/CPU_Intensive_Procs 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Create_VM $HOME/ShellPlugins/Create_VM 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Get_Bad_Hosts $HOME/ShellPlugins/Get_Bad_Hosts 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Git_Status_All $HOME/ShellPlugins/Git_Status_All 644 $SUDO_UID
				FILE bashconfig ShellPlugins/List_Signals $HOME/ShellPlugins/List_Signals 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Load_File_Links2 $HOME/ShellPlugins/Load_File_Links2 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Loop_This $HOME/ShellPlugins/Loop_This 644 $SUDO_UID
				FILE bashconfig ShellPlugins/NIR_Difference $HOME/ShellPlugins/NIR_Difference 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Play_Download_MPSYT $HOME/ShellPlugins/Play_Download_MPSYT 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Shell_Alias_Correcting $HOME/ShellPlugins/Shell_Alias_Correcting 644 $SUDO_UID
				FILE bashconfig ShellPlugins/Times_Table $HOME/ShellPlugins/Times_Table 644 $SUDO_UID ;;
			i3config)
				FILE i3config config $HOME/.config/i3/config 644 "$SUDO_UID"
				[ -d "$HOME/.i3a" ] || /bin/mkdir "$HOME/.i3a"
				FILE i3config .i3a/dtrecord $HOME/.i3a/dtrecord 644 "$SUDO_UID"
				FILE i3config .i3a/feh_slides $HOME/.i3a/feh_slides 644 "$SUDO_UID"
				FILE i3config .i3a/initialize $HOME/.i3a/initialize 644 "$SUDO_UID"
				FILE i3config .i3a/key_autorepeat $HOME/.i3a/key_autorepeat 644 "$SUDO_UID"
				FILE i3config .i3a/scrot_sel_take $HOME/.i3a/scrot_sel_take 644 "$SUDO_UID"
				FILE i3config .i3a/scrot_take $HOME/.i3a/scrot_take 644 "$SUDO_UID"
				FILE i3config .i3a/scrot_win_take $HOME/.i3a/scrot_win_take 644 "$SUDO_UID"
				FILE i3config .i3a/sink_lower $HOME/.i3a/sink_lower 644 "$SUDO_UID"
				FILE i3config .i3a/sink_mute $HOME/.i3a/sink_mute 644 "$SUDO_UID"
				FILE i3config .i3a/sink_raise $HOME/.i3a/sink_raise 644 "$SUDO_UID"
				FILE i3config .i3a/source_lower $HOME/.i3a/source_lower 644 "$SUDO_UID"
				FILE i3config .i3a/source_mute $HOME/.i3a/source_mute 644 "$SUDO_UID"
				FILE i3config .i3a/source_raise $HOME/.i3a/source_raise 644 "$SUDO_UID"
				FILE i3config .i3a/term_font_size $HOME/.i3a/term_font_size 644 "$SUDO_UID"
				FILE i3config .i3a/term_font_size_py $HOME/.i3a/term_font_size_py 644 "$SUDO_UID"
				FILE i3config .i3a/terminal $HOME/.i3a/terminal 644 "$SUDO_UID"
				FILE i3config .i3a/track_notify $HOME/.i3a/track_notify 644 "$SUDO_UID"
				FILE i3config .i3a/use_dmenu $HOME/.i3a/use_dmenu 644 "$SUDO_UID" ;;
			kernelchk)
				FILE kernelchk kernelchk /usr/bin/kernelchk 755 0 ;;
			get-uuid)
				FILE get-uuid get-uuid /usr/bin/get-uuid 755 0
				FILE get-uuid get-uuid.desktop /usr/share/applications/get-uuid.desktop 644 0 ;;
			wcdl)
				FILE wcdl wcdl /usr/bin/wcdl 755 0
				FILE wcdl wcdl-cacheparse /usr/bin/wcdl-cacheparse 755 0 ;;
			getline)
				FILE getline getline /usr/bin/getline 755 0 ;;
			mansaver)
				FILE mansaver mansaver /usr/bin/mansaver 755 0 ;;
			lspkg)
				FILE lspkg lspkg /usr/bin/lspkg 755 0 ;;
			lsbins)
				FILE lsbins lsbins /usr/bin/lsbins 755 0 ;;
			github-ssh-setup)
				FILE github-ssh-setup github-ssh-setup /usr/bin/github-ssh-setup 755 0 ;;
			homewatch)
				FILE homewatch homewatch /usr/bin/homewatch 755 0 ;;
			getip)
				FILE getip getip /usr/bin/getip 755 0 ;;
			ripmydvd)
				FILE ripmydvd ripmydvd /usr/bin/ripmydvd 755 0 ;;
			simwea)
				FILE simwea simwea /usr/bin/simwea 755 0 ;;
			medlog)
				FILE miscellaneous medlog /usr/bin/medlog 755 0 ;;
			mif)
				FILE miscellaneous mif /usr/bin/mif 755 0 ;;
			seewttr)
				FILE miscellaneous seewttr /usr/bin/seewttr 755 0 ;;
			backmeup)
				FILE miscellaneous backmeup /usr/bin/backmeup 755 0 ;;
			clean-locales)
				FILE miscellaneous clean-locales /usr/bin/clean-locales 755 0 ;;
			mkpass)
				FILE miscellaneous mkpass /usr/bin/mkpass 755 0 ;;
			mplay)
				FILE miscellaneous mplay /usr/bin/mplay 755 0 ;;
			pagewatch)
				FILE miscellaneous pagewatch /usr/bin/pagewatch 755 0 ;;
			redshifter)
				FILE miscellaneous redshifter /usr/bin/redshifter 755 0 ;;
			tozero)
				FILE miscellaneous tozero /usr/bin/tozero 755 0 ;;
			nosp)
				FILE miscellaneous nosp /usr/bin/nosp 755 0 ;;
			dlspwalls)
				FILE miscellaneous dlspwalls /usr/bin/dlspwalls 755 0 ;;
			dlfcmags)
				FILE miscellaneous dlfcmags /usr/bin/dlfcmags 755 0 ;;
			dlfallwalls)
				FILE miscellaneous dlfallwalls /usr/bin/dlfallwalls 755 0 ;;
			dl-tuxradar-podcasts)
				FILE miscellaneous dl-tuxradar-podcasts /usr/bin/dl-tuxradar-podcasts 755 0 ;;
			*)
				ERR "$LINENO" "Unavailable WHAT at: $1" ;;
		esac
	
		shift
	done
else
	printf "%s\n" "${AVAIL[@]}"
fi
